
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from '@/types';
import { AuthError } from '@supabase/supabase-js';

const SUPABASE_URL = "https://yvgepwnqlgiglurhrppf.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inl2Z2Vwd25xbGdpZ2x1cmhycHBmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQwOTU5ODEsImV4cCI6MjA1OTY3MTk4MX0.LWdNpDp5MFSz5pbi0HzVFG1ukJBLL7qqyOJ0gQi14ak";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
  }
});

// Fix the deleteUser function to match the expected return type
export const deleteUser = async (userId: string) => {
  try {
    const response = await fetch(`${SUPABASE_URL}/functions/v1/delete-user`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${SUPABASE_PUBLISHABLE_KEY}`
      },
      body: JSON.stringify({ userId })
    });
    
    if (!response.ok) {
      const errorText = await response.text();
      // Fix the type error: Pass a numeric code instead of a string
      const authError = new AuthError('User deletion failed', 400);
      return { data: { user: null }, error: authError };
    }
    
    return { data: { user: null }, error: null };
  } catch (error: any) {
    // Fix the type error: Pass a numeric code instead of a string
    const authError = new AuthError('User deletion failed', 500);
    return { data: { user: null }, error: authError };
  }
};
